pipeline {
    agent any
    environment {
        AWS_ACCOUNT_ID = "654654623396"
        AWS_DEFAULT_REGION = "ap-south-1"
        IMAGE_REPO_NAME = "jenkins-docker"
        IMAGE_TAG = "${BUILD_NUMBER}"  
        REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}"
    }
    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/sindhukampli/java-example'
            }
        }
        
        stage('Build') {
            steps {
                script {
                    // Ensure Maven and Java 17 are used
                    withEnv(['JAVA_HOME=/usr/lib/jvm/java-17-openjdk', 'PATH+JAVA=$JAVA_HOME/bin']) {
                        sh 'mvn clean install'
                    }
                }
            }
        }
        
        stage('Docker Build') {
            steps {
                script {
                    dockerImage = docker.build("${IMAGE_REPO_NAME}:${IMAGE_TAG}")
                }
            }
        }
        
        stage('Push') {
            steps {
                script {
                    sh "aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${REPOSITORY_URI}"
                    sh "docker tag ${IMAGE_REPO_NAME}:${IMAGE_TAG} ${REPOSITORY_URI}:${IMAGE_TAG}"
                    sh "docker push ${REPOSITORY_URI}:${IMAGE_TAG}"
                }
            }
        }
        
        stage('Deploy') {
            steps {
                script {
                    sh "docker run -itd -p 9090:8080 ${REPOSITORY_URI}:${IMAGE_TAG}"
                }
            }
        }
    }
    
    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
